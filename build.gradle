plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.4.20'
    // id 'checkstyle'

    // Fixes problem with long filenames
    id "ua.eshepelyuk.ManifestClasspath" version "1.0.0"

}

compileJava.options.encoding = 'UTF-8'

def versionName = "Simbrain4Beta"
def jmonkeyengine_version = '3.3.2-stable'

mainClassName = 'org.simbrain.workspace.gui.Splasher'

sourceCompatibility = 1.10

repositories {
    mavenCentral()
    jcenter()
    maven {
        url  "https://kotlin.bintray.com/kotlin-datascience"
    }
}

dependencies {

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.4.20"
    implementation 'org.jetbrains.kotlin:kotlin-scripting-jvm-host:1.4.20'
    implementation 'org.jetbrains.kotlin:kotlin-scripting-jsr223:1.4.20'
    implementation 'org.jetbrains.kotlin:kotlin-compiler-embeddable:1.4.20'
    implementation 'org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:1.4.20'
    implementation 'org.jetbrains.kotlin:kotlin-script-util:1.4.20'
    implementation 'org.jetbrains.kotlin:kotlin-script-runtime:1.4.20'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-swing:1.4.2'

    implementation 'org.jetbrains.kotlin-deeplearning:api:0.1.1'

    implementation 'com.github.haifengl:smile-kotlin:2.6.0'
        implementation 'com.github.haifengl:smile-mkl:2.6.0'

    // https://mvnrepository.com/artifact/com.github.haifengl/smile-core
    compile group: 'com.github.haifengl', name: 'smile-core', version: '2.6.0'

    // https://mvnrepository.com/artifact/ca.umontreal.iro.simul/ssj
    compile group: 'ca.umontreal.iro.simul', name: 'ssj', version: '3.3.1'

    //https://mvnrepository.com/artifact/org.ostermiller/utils
    compile group: 'org.ostermiller', name: 'utils', version: '1.07.00'

    // https://mvnrepository.com/artifact/org.tinylog/tinylog/1.3.6
    compile group: 'org.tinylog', name: 'tinylog', version: '1.3.6'

    // https://mvnrepository.com/artifact/junit/junit
    compile "junit:junit:4.12"

    // https://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream
    compile group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.14'

    // https://mvnrepository.com/artifact/org.piccolo2d/piccolo2d-extras
    compile group: 'org.piccolo2d', name: 'piccolo2d-extras', version: '3.0.1'
    compile group: 'org.piccolo2d', name: 'piccolo2d-core', version: '3.0.1'

    // https://mvnrepository.com/artifact/jfree/jfreechart
    compile group: 'jfree', name: 'jfreechart', version: '1.0.12'

    // https://mvnrepository.com/artifact/gov.nist.math/jama
    compile group: 'gov.nist.math', name: 'jama', version: '1.0.2'

    // https://mvnrepository.com/artifact/org.swinglabs/swingx-core
    compile group: 'org.swinglabs', name: 'swingx-core', version: '1.6.2-2'

    // https://mvnrepository.com/artifact/com.miglayout/miglayout-swing
    compile group: 'com.miglayout', name: 'miglayout-swing', version: '5.0'

    // https://mvnrepository.com/artifact/com.fifesoft/rsyntaxtextarea
    compile group: 'com.fifesoft', name: 'rsyntaxtextarea', version: '2.5.3'

    // https://mvnrepository.com/artifact/org.beanshell/bsh
    compile group: 'org.beanshell', name: 'bsh', version: '2.0b5'

    // https://mvnrepository.com/artifact/org.jmonkeyengine
    compile "org.jmonkeyengine:jme3-core:$jmonkeyengine_version"
    compile "org.jmonkeyengine:jme3-desktop:$jmonkeyengine_version"
    compile "org.jmonkeyengine:jme3-jogl:$jmonkeyengine_version"
    compile "org.jmonkeyengine:jme3-lwjgl:$jmonkeyengine_version"
    compile "org.jmonkeyengine:jme3-bullet:$jmonkeyengine_version"
    compile "org.jmonkeyengine:jme3-bullet-native:$jmonkeyengine_version"
    compile "org.jmonkeyengine:jme3-plugins:$jmonkeyengine_version"

}

// Sample invocation:
// gradle runSim -PsimName="Test Sim"
task runSim(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "org.simbrain.custom_sims.RegisteredSimulationsKt"
    if(project.hasProperty('simName')){
        args simName
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "10"
    kotlinOptions.freeCompilerArgs += "-Xuse-experimental=kotlin.experimental.ExperimentalTypeInference"
    kotlinOptions.useIR = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "10"
    kotlinOptions.freeCompilerArgs += "-Xuse-experimental=kotlin.experimental.ExperimentalTypeInference"
    kotlinOptions.useIR = true
}

