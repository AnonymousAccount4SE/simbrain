import static org.apache.tools.ant.taskdefs.condition.Os.*

plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
    // id 'checkstyle'
    // Fixes problem with long filenames
    id "ua.eshepelyuk.ManifestClasspath" version "1.0.0"
}

def versionName = "Simbrain4Beta"
def simbrainJvmArgs = [ '--add-opens','java.base/java.util=ALL-UNNAMED',
                        '--add-opens','java.desktop/java.awt=ALL-UNNAMED',
                        '--add-opens', 'java.base/java.util.concurrent=ALL-UNNAMED']
mainClassName = 'org.simbrain.workspace.gui.Splasher'
compileJava.options.encoding = 'UTF-8'

// When updating also search for "jvmTarget" and update those
sourceCompatibility = 1.11

repositories {
    mavenCentral()
}

dependencies {

    // Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.6.10'
    implementation 'org.jetbrains.kotlin:kotlin-scripting-jvm-host:1.6.10'
    implementation 'org.jetbrains.kotlin:kotlin-scripting-jsr223:1.6.10'
    implementation 'org.jetbrains.kotlin:kotlin-compiler-embeddable:1.6.10'
    implementation 'org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:1.6.10'
    implementation 'org.jetbrains.kotlin:kotlin-script-util:1.6.10'
    implementation 'org.jetbrains.kotlin:kotlin-script-runtime:1.6.10'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0-native-mt'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-swing:1.6.0-native-mt'

    // Kotlin DL
    implementation 'org.jetbrains.kotlinx:kotlin-deeplearning-api:0.3.0'

    // Smile
    implementation 'com.github.haifengl:smile-kotlin:2.6.0'
    if (isFamily(FAMILY_MAC) && isArch('aarch64')) {
        implementation group: 'org.bytedeco', name: 'javacpp', version: '1.5.7'
        implementation group: 'org.bytedeco', name: 'openblas', version: '0.3.19-1.5.7'
        implementation group: 'org.bytedeco', name: 'openblas-platform', version: '0.3.19-1.5.7'
        implementation group: 'org.bytedeco', name: 'arpack-ng', version: '3.8.0-1.5.7'
    } else {
        implementation 'com.github.haifengl:smile-mkl:2.6.0'
    }
    implementation 'com.github.haifengl:smile-plot:2.6.0'
    implementation 'com.github.haifengl:smile-nlp:2.6.0'

    // JUnit
    implementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation(platform('org.junit:junit-bom:5.7.1'))
    testImplementation('org.junit.jupiter:junit-jupiter:5.8.2')

    // https://mvnrepository.com/artifact/com.github.haifengl/smile-core
    implementation group: 'com.github.haifengl', name: 'smile-core', version: '2.6.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-math3
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

    // jsoup HTML parser library @ https://jsoup.org/
    implementation 'org.jsoup:jsoup:1.14.3'

    //https://mvnrepository.com/artifact/org.ostermiller/utils
    implementation group: 'org.ostermiller', name: 'utils', version: '1.07.00'

    // https://mvnrepository.com/artifact/org.tinylog/tinylog/1.3.6
    implementation group: 'org.tinylog', name: 'tinylog', version: '1.3.6'
    // https://mvnrepository.com/artifact/org.tinylog/tinylog-impl
    runtimeOnly group: 'org.tinylog', name: 'tinylog-impl', version: '2.4.1'
    // https://mvnrepository.com/artifact/org.tinylog/slf4j-tinylog
    runtimeOnly group: 'org.tinylog', name: 'slf4j-tinylog', version: '2.4.1'

    // https://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream
    implementation group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.19'

    // https://mvnrepository.com/artifact/org.piccolo2d/piccolo2d-extras
    implementation group: 'org.piccolo2d', name: 'piccolo2d-extras', version: '3.0.1'
    implementation group: 'org.piccolo2d', name: 'piccolo2d-core', version: '3.0.1'

    // https://mvnrepository.com/artifact/org.jfree/jfreechart
    implementation group: 'org.jfree', name: 'jfreechart', version: '1.5.3'

    // https://mvnrepository.com/artifact/org.swinglabs/swingx-core
    implementation group: 'org.swinglabs', name: 'swingx-core', version: '1.6.2-2'

    // https://mvnrepository.com/artifact/com.miglayout/miglayout-swing
    implementation group: 'com.miglayout', name: 'miglayout-swing', version: '11.0'

    // https://mvnrepository.com/artifact/com.fifesoft/rsyntaxtextarea
    implementation group: 'com.fifesoft', name: 'rsyntaxtextarea', version: '3.2.0'

    // https://mvnrepository.com/artifact/org.beanshell/bsh
    implementation group: 'org.beanshell', name: 'bsh', version: '2.0b5'

    // JMonkeyEngine
    implementation 'org.jmonkeyengine:jme3-core:3.5.1-stable'
    implementation 'org.jmonkeyengine:jme3-jbullet:3.5.1-stable'
    implementation 'org.jmonkeyengine:jme3-desktop:3.5.1-stable'
    implementation 'org.jmonkeyengine:jme3-lwjgl3:3.5.1-stable'

}

application {
    applicationDefaultJvmArgs = simbrainJvmArgs
}

test {
    useJUnitPlatform()
}

// Sample invocation:
// gradle runSim -PsimName="Test Sim"
task runSim(type: JavaExec) {
    jvmArgs simbrainJvmArgs
    classpath = sourceSets.main.runtimeClasspath
    main = "org.simbrain.custom_sims.RegisteredSimulationsKt"
    if(project.hasProperty('simName')){
        args simName
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
    kotlinOptions.freeCompilerArgs += "-Xuse-experimental=kotlin.experimental.ExperimentalTypeInference"
    kotlinOptions.useIR = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
    kotlinOptions.freeCompilerArgs += "-Xuse-experimental=kotlin.experimental.ExperimentalTypeInference"
    kotlinOptions.useIR = true
}

